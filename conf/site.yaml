
# S{RANDOM}     : Random number up to 9999
# ${SCRIPTROOT} : Nightly path

# 'tarball pool' is a cache for tarball files. 
# It is checked before download from internet. 
# To disable it, comment the line. Git and 
# Local files do not use this cache. 

nightly:
    workspace    : /tmp/TEMP${RANDOM}
    html output  : ${SCRIPTROOT}/../public_html
    tarball pool : ${SCRIPTROOT}/pool/
    simulators   : all

# In external libs' cmd, the nightly adds --prefix 
# in ./configure automatically
archc:
    link/path: https://github.com/archc/archc.git
    branch: master
    external libs:
        systemc: 
            link/path: https://github.com/archc/systemc.git
            branch: 2.3.1a
            cmd: ./autogen.sh && ./configure && make && make install 
        libelf: 
            link/path: git://git.fedorahosted.org/git/elfutils.git
            branch: master
            cmd: autoreconf -vif && ./configure --enable-maintainer-mode && make install
        #binutils  : https://ftp.gnu.org/gnu/binutils/binutils-2.24.tar.bz2 
        #gdb       : https://ftp.gnu.org/gnu/gdb/gdb-7.8.tar.gz 
       
models:
    mips:
        inputfile : mips.ac
        run       : ./mips.x --load=
        link/path : https://github.com/archc/mips.git
        branch    : master
        cross     : http://archc.lsc.ic.unicamp.br/downloads/Tools/mips/archc_mips_toolchain_20141215_64bit.tar.bz2
    mips32r2:
        inputfile : mips.ac
        run       : ./mips.x --load=
        link/path : https://github.com/archc/mips.git
        branch    : mips32r2
        cross     : http://archc.lsc.ic.unicamp.br/downloads/Tools/mips/archc_mips_toolchain_20141215_64bit.tar.bz2
    arm:
        inputfile : arm.ac
        run       : ./arm.x --load=
        link/path : https://github.com/archc/arm.git
        branch    : master
        cross     : http://archc.lsc.ic.unicamp.br/downloads/Tools/arm/archc_arm_toolchain_20150102_64bit.tar.bz2
    powerpc:
        inputfile : powerpc.ac
        run       : ./powerpc.x --load=
        link/path : https://github.com/archc/powerpc.git
        branch    : master
        cross     : http://archc.lsc.ic.unicamp.br/downloads/Tools/powerpc/archc_powerpc_toolchain_20141215_64bit.tar.bz2
    sparc:
        inputfile : sparc.ac
        run       : ./sparc.x --load=
        link/path : https://github.com/archc/sparc.git
        branch    : master
        cross     : http://archc.lsc.ic.unicamp.br/downloads/Tools/sparc/archc_sparc_toolchain_20141215_64bit.tar.bz2

# Each element in the 'models' array will be combined 
# with the 'generator' to generate simulators

# 'custom links' must end with ' && echo <file>'
# The echo output will be used as target file by the link

simulators:
    acsim:
        generator : acsim
        options   : -abi -nw
        models    : all
        benchmarks: [mibench, spec2006]
        desc      : "Default ArchC simulator"
    powersc:
        generator : acsim
        options   : -abi -nw -pw
        models    : [mips, mips32r2, sparc]
        benchmarks: [mibench, spec2006]
        desc      : "Simulator with Power Statistics"
        custom links:
            power report: | 
                mv window_power_report_*.csv output.txt && echo output.txt
    hltrace:
        generator : acsim
        options   : -abi -nw -hlt
        models    : [mips, mips32r2, sparc, arm, powerpc]
        benchmarks: [mibenchsmall]
        desc      : "Simulator with High Level Trace output"
        custom links:
            high level trace: |
                tar -cvf out.tar.bz2 *.hltrace && echo out.tar.bz2
    gdb_multiarch:
        generator : acsim
        options   : -gdb 
        models    : [mips, mips32r2, sparc, arm, powerpc]
        benchmarks: [acstone]
        desc      : "ACStone using 'gdb-multiarch'"
        custom links: 
            gdb-multiarch version: |
                gdb-multiarch -v &> version.txt && echo version.txt
    gdb_compiled:
        generator : acsim
        options   : -gdb 
        models    : [mips, mips32r2, sparc, arm, powerpc]
        benchmarks: [acstone_gdb]
        desc      : "ACStone using 'gdb' compiled from original source code"
        custom links:
            gdb version: |
                `find . -iname "*-gdb"` -v &> version.txt && echo version.txt
#    gdb_acbingen:
#        generator : acsim
#        options   : -gdb 
#        models    : [mips, mips32r2, sparc, arm, powerpc]
#        benchmarks: [acstone]
#        desc      : "ACStone using 'gdb' patched by 'acbingen.sh'"
#
cross:
    mips_gcc: 
        link  : http://archc.lsc.ic.unicamp.br/downloads/Tools/mips/archc_mips_toolchain_20141215_64bit.tar.bz2
        cc    : mips-newlib-elf-gcc
        cxx   : mips-newlib-elf-g++
        flags : -specs=archc
        float : soft
        endian: big
    arm_gcc:
        link  : http://archc.lsc.ic.unicamp.br/downloads/Tools/arm/archc_arm_toolchain_20150102_64bit.tar.bz2
        cc    : arm-newlib-eabi-gcc
        cxx   : arm-newlib-eabi-g++
        flags : -specs=archc
        float : soft
        endian: little
    powerpc_gcc:
        link  : http://archc.lsc.ic.unicamp.br/downloads/Tools/powerpc/archc_powerpc_toolchain_20141215_64bit.tar.bz2
        cc    : powerpc-newlib-elf-gcc
        cxx   : powerpc-newlib-elf-g++
        flags : -specs=archc
        float : soft
        endian: big
    sparc_gcc: 
        link  : http://archc.lsc.ic.unicamp.br/downloads/Tools/sparc/archc_sparc_toolchain_20141215_64bit.tar.bz2
        cc    : sparc-newlib-elf-gcc
        cxx   : sparc-newlib-elf-g++
        flags : -specs=archc
        float : soft
        endian: big
    mips_ecc:
        link  : ftp://ellcc.org/pub/ellcc-x86_64-linux-0.1.32.tgz
        cc    : ecc
        cxx   : ecc
        flags : -target mips32r2sf-linux
        float : soft
        endian: big
    mips_ecc-hard:
        link  : ftp://ellcc.org/pub/ellcc-x86_64-linux-0.1.32.tgz
        cc    : ecc
        cxx   : ecc
        flags : -target mips32r2-linux
        float : hard
        endian: big
    arm_ecc:
        link  : ftp://ellcc.org/pub/ellcc-x86_64-linux-0.1.32.tgz
        cc    : ecc
        cxx   : ecc
        flags : -target arm32v7sf-linux
        float : soft
        endian: little
    powerpc_ecc:
        link  : ftp://ellcc.org/pub/ellcc-x86_64-linux-0.1.32.tgz
        cc    : ecc
        cxx   : ecc
        flags : -target ppc32-linux
        float : hard
        endian: big

benchmarks:
    mibenchtest:
        automotive/qsort     : [small]
        security/sha         : [small]
        automotive/susan     : [small]
        telecomm/gsm         : [small]
        consumer/jpeg        : [small]
    mibench:
        automotive/basicmath : [small,large]
        automotive/bitcount  : [small,large]
        automotive/qsort     : [small,large]
        automotive/susan     : [small,large]
        telecomm/adpcm       : [small,large]
        telecomm/CRC32       : [small,large]
        telecomm/FFT         : [small,large] 
        telecomm/gsm         : [small,large]
        network/dijkstra     : [small,large]
        network/patricia     : [small,large] 
        security/rijndael    : [small,large]
        security/sha         : [small,large]
        consumer/jpeg        : [small,large]
        consumer/lame        : [small,large]
    mibenchsmall:
        automotive/basicmath : [small]
        automotive/bitcount  : [small]
        automotive/qsort     : [small]
        automotive/susan     : [small]
        telecomm/adpcm       : [small]
        telecomm/CRC32       : [small]
        telecomm/FFT         : [small] 
        telecomm/gsm         : [small]
        network/dijkstra     : [small]
        network/patricia     : [small] 
        security/rijndael    : [small]
        security/sha         : [small]
        consumer/jpeg        : [small]
        consumer/lame        : [small]
    spec2006:
        401.bzip2      : [test]
        403.gcc        : [test]
        429.mcf        : [test] 
        445.gobmk      : [test]
        456.hmmer      : [test]
        458.sjeng      : [test]
        462.libquantum : [test]
        464.h264ref    : [test] 
        #omnetpp       : [test]  # with problem
        #astar         : [test]  # with problem
    acstonetest:
        000-020        : [acstone]
    acstonetest_gdb:
        gdb            : [acstone]
        000-020        : [acstone]
    acstone:
        000-020        : [acstone]
        021-050        : [acstone]
        050-100        : [acstone]
        100-200        : [acstone]
    acstone_gdb:
        gdb            : [acstone]
        000-020        : [acstone]
        021-050        : [acstone]
        050-100        : [acstone]
        100-200        : [acstone]

